{"version":3,"sources":["model.ts","controller.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["bgMat","edgeMat","labelMat","bgRoi","edgeRoi","labelRoi","display","Pos","dist","v1","v2","Math","sqrt","pow","add","sub","mul","v","m","sum","vecs","reduce","prev","curr","nbrs","p","closeNbrs","getVal","mat","pos","cols","rows","ucharPtr","fallPos","earlyStop","curPos","curVal","r","vals","map","maxNbrVal","max","maxNbrs","i","filter","_","includes","direction","length","dists","indexOf","min","isBranch","changes","selectTillBranch","inclusive","res","stack","visited","push","pop","toString","edgeNbrs","branchedNbrs","forEach","needRepair","fillSelect","mats","hitWall","setVal","val","set","growValley","cv","threshold","THRESH_BINARY","Mat","ones","CV_8U","dilated","dilate","Point","BORDER_CONSTANT","morphologyDefaultBorderValue","addWeighted","delete","hist","RoiRange","width","height","DEFAULT_COMPOSE","showBg","bgWeight","showEdge","showEdgeValley","edgeWeight","showLabel","labelColor","labelWeight","composeUpdate","Subject","composeStore","BehaviorSubject","roiUpdate","roiStore","srcUpdate","edgeUpdate","labelUpdate","displayUpdate","undo","h","next","roi","update","isUndo","fitRange","n","pipe","value","subscribe","config","x","y","distinctUntilChanged","JSON","stringify","tap","console","log","zeros","type","src","imread","cvtColor","COLOR_RGB2GRAY","Canny","dimBy","targets","isSet","labelThresed","imshow","outputLabel","blank","copyTo","edgeCvted","COLOR_GRAY2RGBA","labelCvted","labelColorInv","c","subtract","composeDisplay","color","amount","dimMask","ValidCursorModes","0","1","2","3","4","ComposeConfigs","5","CursorColors","getRelPos","canvas","e","rect","getBoundingClientRect","clientX","left","clientY","top","getRoiPos","relPos","floor","App","useState","isFocused","setFocused","actionMode","setActionMode","cursorMode","setCursorMode","isMouseDown","setMouseDown","movePrevPos","setMovePrevPos","isMovingCanvas","setMovingCanvas","setRoi","composeConfig","setComposeConfig","imageSrc","useRef","labelOutput","inited","useEffect","roiSub","composeSub","unsubscribe","downloadLabel","useCallback","link","document","createElement","download","href","current","toDataURL","click","doAction","pressed","range","j","setModes","newCursorMode","newActionMode","onImageLoad","currentTarget","onCanvasMouseEnter","onCanvasMouseLeave","onCanvasMouseMove","onCanvasMouseDown","onCanvasMouseUp","onCanvasKeyPress","key","onCanvasKeyDown","onCanvasKeyUp","onCanvasFocus","onCanvasBlur","onCanvasWheel","preventDefault","oldPos","newRoi","deltaY","ceil","newPos","actionRow","useMemo","align","span","Group","onChange","target","disabled","Button","miscRow","checked","unCheckedChildren","checkedChildren","className","ghost","onClick","appearanceRow","offset","step","id","alt","ref","onLoad","style","name","URL","createObjectURL","files","onMouseEnter","onMouseLeave","onMouseMove","onMouseDown","onMouseUp","onKeyPress","onFocus","onBlur","onWheel","onKeyDown","onKeyUp","tabIndex","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e74ede8c.chunk.js","sourcesContent":["declare const cv: any\r\n\r\nvar bgMat: any\r\nvar edgeMat: any\r\nvar labelMat: any\r\n\r\nvar bgRoi: any\r\nexport var edgeRoi: any\r\nexport var labelRoi: any\r\nexport var display: any\r\n\r\nexport type ComposeConfig = {\r\n    showBg: boolean\r\n    bgWeight: number,\r\n    showEdge: boolean,\r\n    showEdgeValley: boolean,\r\n    edgeWeight: number,\r\n    showLabel: boolean,\r\n    labelColor: number[],\r\n    labelWeight: number,\r\n}\r\n\r\nexport const Pos = {\r\n    dist: (v1: number[], v2: number[]) => Math.sqrt(Math.pow(v1[0] - v2[0], 2) + Math.pow(v1[1] - v2[1], 2)),\r\n    add: (v1: number[], v2: number[]) => [v1[0] + v2[0], v1[1] + v2[1]],\r\n    sub: (v1: number[], v2: number[]) => [v1[0] - v2[0], v1[1] - v2[1]],\r\n    mul: (v: number[], m: number) => [v[0] * m, v[1] * m],\r\n    sum: (vecs: number[][]) => vecs.reduce((prev, curr) => Pos.add(prev, curr), [0, 0]),\r\n    nbrs: (p: number[]) => [\r\n        [p[0] - 1, p[1] - 1], [p[0], p[1] - 1], [p[0] + 1, p[1] - 1], [p[0] + 1, p[1]],\r\n        [p[0] + 1, p[1] + 1], [p[0], p[1] + 1], [p[0] - 1, p[1] + 1], [p[0] - 1, p[1]]\r\n    ],\r\n    closeNbrs: (p: number[]) => [\r\n        [p[0], p[1] - 1], [p[0] + 1, p[1]],\r\n        [p[0], p[1] + 1], [p[0] - 1, p[1]]\r\n    ],\r\n}\r\n\r\nexport const getVal = (mat: any, pos: number[]) => {\r\n    if (pos[0] >= 0 && pos[1] >= 0 && pos[0] < mat.cols && pos[1] < mat.rows)\r\n        return mat.ucharPtr(pos[0], pos[1])[0] as number\r\n    return 0\r\n}\r\n\r\nexport const fallPos = (mat: any, pos: number[], earlyStop = false) => {\r\n    let [curPos, curVal] = [pos, getVal(mat, pos)]\r\n    if (curVal === 0) return curPos\r\n    for (let r = 0; r < 20; r++) {\r\n        let nbrs = Pos.nbrs(curPos)\r\n        let vals = nbrs.map(pos => getVal(mat, pos))\r\n        const maxNbrVal = Math.max(...vals)\r\n        if (maxNbrVal === curVal) break\r\n        const maxNbrs = vals.map((v, i) => v === maxNbrVal ? i : -1).filter(i => i > -1)\r\n        if (earlyStop && maxNbrVal === 255) break\r\n        vals = vals.filter((_, i) => maxNbrs.includes(i))\r\n        nbrs = nbrs.filter((_, i) => maxNbrs.includes(i))\r\n        const direction = Pos.sub(Pos.mul(Pos.sum(nbrs), 1 / maxNbrs.length), curPos)\r\n        const dists = nbrs.map(pos => Pos.dist(pos, direction))\r\n        curPos = nbrs[dists.indexOf(Math.min(...dists))]\r\n        curVal = maxNbrVal\r\n        if (curVal === 255) break\r\n    }\r\n    return curPos\r\n}\r\n\r\nconst isBranch = (mat: any, pos: number[]) => {\r\n    let nbrs = Pos.nbrs(pos)\r\n    let vals = nbrs.map(p => getVal(mat, p)).map(v => v === 255 ? 1 : 0)\r\n    let changes = 0\r\n    if ((vals[7] && vals[0] && vals[1]) ||\r\n        (vals[1] && vals[2] && vals[3]) ||\r\n        (vals[3] && vals[4] && vals[5]) ||\r\n        (vals[5] && vals[6] && vals[7])) return true\r\n    for (let i = 0; i < 8; i++) changes += vals[i] ^ vals[(i + 1) % 8]\r\n    return changes > 4\r\n}\r\n\r\nexport const selectTillBranch = (mat: any, pos: number[], inclusive = false) => {\r\n    if (getVal(mat, pos) !== 255) return []\r\n    if (isBranch(mat, pos)) return [pos]\r\n    const res: number[][] = []\r\n    const stack: number[][] = []\r\n    const visited: { [p: string]: boolean } = {}\r\n    stack.push(pos)\r\n    while (stack.length) {\r\n        let curPos = stack.pop()!\r\n        if (visited[curPos.toString()]) continue\r\n        visited[curPos.toString()] = true\r\n        res.push(curPos)\r\n        const edgeNbrs = Pos.nbrs(curPos).filter(p => getVal(mat, p) === 255)\r\n        const branchedNbrs = edgeNbrs.filter(p => isBranch(mat, p))\r\n        if (branchedNbrs.length) {\r\n            if (inclusive) branchedNbrs.forEach(p => res.push(p))\r\n            continue\r\n        }\r\n        edgeNbrs.forEach(p => stack.push(p))\r\n    }\r\n    return res\r\n}\r\n\r\nexport const needRepair = (mat: any[], pos: number[]) => {\r\n    if (getVal(mat, pos) === 255) return false\r\n    let nbrs = Pos.nbrs(pos)\r\n    let vals = nbrs.map(p => getVal(mat, p)).map(v => v === 255 ? 1 : 0)\r\n    const sum = vals.reduce((prev, curr) => prev + curr, 0 as number)\r\n    if (sum >= 7) return true\r\n    let changes = 0\r\n    for (let i = 0; i < 8; i++) changes += vals[i] ^ vals[(i + 1) % 8]\r\n    return changes >= 4\r\n}\r\n\r\nexport const fillSelect = (mats: any[], pos: number[]) => {\r\n    const hitWall = (p: number[]) => mats.filter(mat => getVal(mat, p) === 255).length > 0\r\n    if (hitWall(pos)) return []\r\n    const res: number[][] = []\r\n    const stack: number[][] = []\r\n    const visited: { [p: string]: boolean } = {}\r\n    stack.push(pos)\r\n    while (stack.length) {\r\n        let curPos = stack.pop()!\r\n        if (visited[curPos.toString()]) continue\r\n        visited[curPos.toString()] = true\r\n        res.push(curPos)\r\n        const nonEdgeNbrs = Pos.closeNbrs(curPos).filter(p => !hitWall(p))\r\n        nonEdgeNbrs.filter(p => !visited[p.toString()]).forEach(p => stack.push(p))\r\n        if (res.length > 1000) break\r\n    }\r\n    return res\r\n}\r\n\r\nexport const imshow = (mat: any) => cv.imshow('canvas', mat)\r\n\r\nexport const setVal = (mat: any, pos: number[], val: number[]) => {\r\n    if (pos[0] >= 0 && pos[1] >= 0 && pos[0] < mat.cols && pos[1] < mat.rows)\r\n        mat.ucharPtr(pos[0], pos[1]).set(val)\r\n}\r\n\r\nexport const dimBy = (mat: any, amount: number) => {\r\n    const dimMask = new cv.Mat(mat.rows, mat.cols, mat.type(), [0, 0, 0, amount])\r\n    cv.subtract(mat, dimMask, mat)\r\n    dimMask.delete()\r\n}\r\n\r\nexport const composeDisplay = (display: any, config: ComposeConfig) => {\r\n    const blank = new cv.Mat.zeros(bgRoi.rows, bgRoi.cols, bgMat.type())\r\n    blank.copyTo(display)\r\n    blank.delete()\r\n    if (config.showBg) cv.addWeighted(display, 1, bgRoi, config.bgWeight, 0.0, display)\r\n    if (config.showEdge) {\r\n        const edgeCvted = new cv.Mat.zeros(edgeRoi.rows, edgeRoi.cols, edgeRoi.type())\r\n        if (config.showEdgeValley) {\r\n            cv.add(edgeRoi, edgeCvted, edgeCvted)\r\n        } else {\r\n            cv.threshold(edgeRoi, edgeCvted, 254, 255, cv.THRESH_BINARY)\r\n        }\r\n        cv.cvtColor(edgeCvted, edgeCvted, cv.COLOR_GRAY2RGBA)\r\n        cv.addWeighted(display, 1, edgeCvted, config.edgeWeight, 0.0, display)\r\n        edgeCvted.delete()\r\n    }\r\n    if (config.showLabel) {\r\n        const labelThresed = new cv.Mat()\r\n        cv.threshold(labelRoi, labelThresed, 254, 255, cv.THRESH_BINARY)\r\n        const labelCvted = new cv.Mat()\r\n        cv.cvtColor(labelThresed, labelCvted, cv.COLOR_GRAY2RGBA)\r\n        const labelColorInv = new cv.Mat(labelCvted.rows, labelCvted.cols, labelCvted.type(), config.labelColor.map(c => 255 - c))\r\n        cv.addWeighted(display, 1, labelCvted, config.labelWeight, 0.0, display)\r\n        cv.subtract(display, labelColorInv, display, labelThresed)\r\n        labelThresed.delete()\r\n        labelCvted.delete()\r\n        labelColorInv.delete()\r\n    }\r\n}\r\n\r\nexport const outputLabel = () => {\r\n    const labelThresed = new cv.Mat()\r\n    cv.threshold(labelMat, labelThresed, 254, 255, cv.THRESH_BINARY)\r\n    cv.imshow('output', labelThresed)\r\n}\r\n\r\nexport const growValley = (mat: any) => {\r\n    cv.threshold(mat, mat, 254, 255, cv.THRESH_BINARY);\r\n    for (let i = 2; i < 6; i++) {\r\n        let filter = cv.Mat.ones(i, i, cv.CV_8U);\r\n        let dilated = new cv.Mat()\r\n        cv.dilate(mat, dilated, filter, new cv.Point(-1, -1), 1, cv.BORDER_CONSTANT, cv.morphologyDefaultBorderValue())\r\n        cv.addWeighted(mat, 0.8, dilated, 0.2, 0.0, mat);\r\n        filter.delete()\r\n        dilated.delete()\r\n    }\r\n}\r\n\r\nexport const initMats = (src: HTMLImageElement) => {\r\n    bgMat = cv.imread(src)\r\n    edgeMat = new cv.Mat()\r\n    cv.cvtColor(bgMat, edgeMat, cv.COLOR_RGB2GRAY, 0)\r\n    cv.Canny(edgeMat, edgeMat, 50, 100, 3, false)\r\n    labelMat = new cv.Mat.zeros(edgeMat.rows, edgeMat.cols, edgeMat.type())\r\n}\r\n\r\nexport const setRoi = (roi: any) => {\r\n    if (display) {\r\n        display.delete()\r\n        bgRoi.delete()\r\n        edgeRoi.delete()\r\n        labelRoi.delete()\r\n    }\r\n    display = new cv.Mat.zeros(roi.height, roi.width, bgMat.type())\r\n    bgRoi = bgMat.roi(roi)\r\n    edgeRoi = edgeMat.roi(roi)\r\n    labelRoi = labelMat.roi(roi)\r\n}\r\n","import { Subject, BehaviorSubject } from 'rxjs'\r\nimport { tap, filter, map, distinctUntilChanged } from 'rxjs/operators'\r\n\r\nimport { edgeRoi, labelRoi, display, imshow, setVal, growValley, composeDisplay, dimBy, initMats, setRoi, ComposeConfig, outputLabel } from './model'\r\n\r\ntype DisplayUtil = {\r\n    setVal: (mat: any, pos: number[], val: number[]) => void\r\n    dimBy: (mat: any, amount: number) => void\r\n}\r\n\r\ntype DataUpdate = {\r\n    isUndo?: boolean,\r\n    targets?: number[][],\r\n    isSet?: boolean,\r\n}\r\ntype DisplayUpdate = {\r\n    targets?: number[][],\r\n    color?: number[],\r\n    dimBy?: number,\r\n}\r\n\r\ntype DataUpdateUndo = {\r\n    update: Subject<DataUpdate>,\r\n    roi: any,\r\n    targets: number[][],\r\n    isSet: boolean,\r\n}\r\n\r\nconst hist: DataUpdateUndo[] = []\r\n\r\nexport var RoiRange = {\r\n    width: [16, 800],\r\n    height: [16, 800],\r\n}\r\n\r\nexport const DEFAULT_COMPOSE: ComposeConfig = {\r\n    showBg: true,\r\n    bgWeight: 1,\r\n    showEdge: true,\r\n    showEdgeValley: false,\r\n    edgeWeight: 0.4,\r\n    showLabel: true,\r\n    labelColor: [255, 255, 0, 255],\r\n    labelWeight: 0.8,\r\n}\r\n\r\nexport const composeUpdate = new Subject<any>()\r\nexport const composeStore = new BehaviorSubject<ComposeConfig>(DEFAULT_COMPOSE)\r\nexport const roiUpdate = new Subject<any>()\r\nexport const roiStore = new BehaviorSubject<any>(null)\r\n\r\nexport const srcUpdate = new Subject<HTMLImageElement>()\r\nexport const edgeUpdate = new Subject<DataUpdate>()\r\nexport const labelUpdate = new Subject<DataUpdate>()\r\nexport const displayUpdate = new Subject<DisplayUpdate>()\r\n\r\nexport const undo = () => {\r\n    const h = hist.pop()\r\n    if (!h) return\r\n    roiUpdate.next(h.roi)\r\n    h.update.next({ ...h, isUndo: true })\r\n}\r\n\r\nconst fitRange = (r: number[], n: number) => n < r[0] ? r[0] : (n > r[1] ? r[1] : n)\r\n\r\nconst restrictRoi = (roi: any) => ({\r\n    width: fitRange(RoiRange.width, roi.width),\r\n    height: fitRange(RoiRange.height, roi.height),\r\n    x: fitRange([0, RoiRange.width[1] - roi.width - 1], roi.x),\r\n    y: fitRange([0, RoiRange.height[1] - roi.height - 1], roi.y),\r\n})\r\n\r\ncomposeUpdate\r\n    .pipe(\r\n        filter(() => roiStore.value),\r\n    )\r\n    .subscribe(config => composeStore.next(config))\r\ncomposeStore\r\n    .subscribe(() => displayUpdate.next({}))\r\n\r\nroiUpdate\r\n    .pipe(\r\n        map(restrictRoi),\r\n        distinctUntilChanged((prev, curr) => JSON.stringify(prev) === JSON.stringify(curr)),\r\n        tap(console.log),\r\n        tap(setRoi)\r\n    )\r\n    .subscribe(roi => roiStore.next(roi))\r\nroiStore\r\n    .subscribe(() => edgeUpdate.next({}))\r\n\r\nsrcUpdate\r\n    .pipe(\r\n        tap(initMats)\r\n    )\r\n    .subscribe(src => {\r\n        RoiRange = {\r\n            width: [16, Math.min(RoiRange.width[1], src.width)],\r\n            height: [16, Math.min(RoiRange.height[1], src.height)]\r\n        }\r\n        roiUpdate.next({ x: 0, y: 0, width: Math.min(400, src.width), height: Math.min(400, src.height) })\r\n        growValley(edgeRoi)\r\n        displayUpdate.next({ dimBy: 96 })\r\n    })\r\n\r\nedgeUpdate\r\n    .pipe(\r\n        filter(() => roiStore.value),\r\n    )\r\n    .subscribe(update => {\r\n        if (update.targets?.length) {\r\n            update.targets.forEach(p => setVal(edgeRoi, p, [update.isSet ? 255 : 0]))\r\n            if (!update.isUndo) hist.push({ update: edgeUpdate, roi: roiStore.value, targets: update.targets!, isSet: !update.isSet! })\r\n        }\r\n        growValley(edgeRoi)\r\n        displayUpdate.next({})\r\n    })\r\n\r\nlabelUpdate\r\n    .pipe(\r\n        filter(() => roiStore.value),\r\n    )\r\n    .subscribe(update => {\r\n        if (update.targets?.length) {\r\n            update.targets.forEach(p => setVal(labelRoi, p, [update.isSet ? 255 : 0]))\r\n            if (!update.isUndo) hist.push({ update: labelUpdate, roi: roiStore.value, targets: update.targets!, isSet: !update.isSet! })\r\n        }\r\n        outputLabel()\r\n        displayUpdate.next({})\r\n    })\r\n\r\ndisplayUpdate\r\n    .pipe(\r\n        filter(() => roiStore.value),\r\n        tap(() => composeDisplay(display, composeStore.value)),\r\n    )\r\n    .subscribe(update => {\r\n        if (update.targets?.length) update.targets.forEach(p => setVal(display, p, update.color!))\r\n        if (update.dimBy) dimBy(display, update.dimBy)\r\n        imshow(display)\r\n    })\r\n","import React, { useRef, SyntheticEvent, MouseEvent, KeyboardEvent, WheelEvent, useState, useCallback, useEffect, useMemo } from 'react'\nimport { Radio, Button, Switch, Col, Row, Slider } from 'antd'\nimport 'antd/dist/antd.css'\n\nimport { srcUpdate, edgeUpdate, labelUpdate, displayUpdate, composeUpdate, roiUpdate, composeStore, roiStore, RoiRange, DEFAULT_COMPOSE, undo } from './controller'\nimport { edgeRoi, labelRoi, getVal, fallPos, selectTillBranch, fillSelect, needRepair } from './model'\nimport './App.css'\n\ntype ActionMode = 0 | 1 | 2 | 3 | 4\nconst NO_ACTION: ActionMode = 0\nconst WIPE_EDGE: ActionMode = 1\nconst DRAW_EDGE: ActionMode = 2\nconst REPAIR_EDGE: ActionMode = 3\nconst FILL_LABEL: ActionMode = 4\n\ntype CursorMode = 0 | 1 | 2 | 3\nconst DISABLED = 0\nconst FALLING = 1\nconst ADHERE = 2\nconst FLOATING = 3\n\nconst ValidCursorModes = {\n    0: [FALLING, ADHERE, FLOATING],\n    1: [FALLING, FLOATING],\n    2: [ADHERE, FLOATING],\n    3: [FLOATING],\n    4: [FLOATING],\n}\n\nconst ComposeConfigs = {\n    0: DEFAULT_COMPOSE,\n    1: { ...DEFAULT_COMPOSE, showEdgeValley: true, bgWeight: 0.5 },\n    2: { ...DEFAULT_COMPOSE, bgWeight: 0.8, edgeWeight: 0.8 },\n    3: { ...DEFAULT_COMPOSE, bgWeight: 0.8, edgeWeight: 0.8 },\n    4: { ...DEFAULT_COMPOSE, bgWeight: 0.6 },\n    5: { ...DEFAULT_COMPOSE, showEdge: false, labelWeight: 0.4 },\n}\n\nconst CursorColors = {\n    0: [0, 0, 0, 0],\n    1: [0, 255, 255, 255],\n    2: [255, 0, 255, 255],\n    3: [255, 0, 0, 255],\n}\n\nconst getRelPos = (canvas: HTMLCanvasElement, e: React.MouseEvent<HTMLCanvasElement>) => {\n    const rect = canvas.getBoundingClientRect()\n    return [(e.clientX - rect.left) / rect.width, (e.clientY - rect.top) / rect.height]\n}\n\nconst getRoiPos = (roi: any, relPos: number[]) => {\n    const res = relPos.map((p, i) => Math.floor(p * [roi.width, roi.height][i]))\n    return [res[1], res[0]]\n}\n\nexport default function App() {\n    const [isFocused, setFocused] = useState(false)\n    const [actionMode, setActionMode] = useState<ActionMode>(NO_ACTION)\n    const [cursorMode, setCursorMode] = useState<CursorMode>(FALLING)\n    const [isMouseDown, setMouseDown] = useState(false)\n    const [movePrevPos, setMovePrevPos] = useState([-1, -1])\n    const [isMovingCanvas, setMovingCanvas] = useState(false)\n    const [roi, setRoi] = useState(roiStore.value)\n    const [composeConfig, setComposeConfig] = useState(composeStore.value)\n    const imageSrc = useRef<HTMLImageElement>(null)\n    const labelOutput = useRef<HTMLCanvasElement>(null)\n    const inited = roi && true\n\n    useEffect(() => {\n        const roiSub = roiStore.subscribe(setRoi)\n        const composeSub = composeStore.subscribe(setComposeConfig)\n        return () => {\n            roiSub.unsubscribe()\n            composeSub.unsubscribe()\n        }\n    }, [])\n\n    const downloadLabel = useCallback(() => {\n        const link = document.createElement('a')\n        link.download = 'label.png'\n        link.href = labelOutput.current?.toDataURL(\"image/png\")!\n        link.click();\n    }, [])\n\n    const doAction = useCallback((pos: number[], pressed = false) => {\n        if (isMovingCanvas) {\n            if (!isMouseDown || movePrevPos[0] === -1) return\n            console.log(roi)\n            roiUpdate.next({\n                ...roi,\n                x: roi.x + movePrevPos[1] - pos[1],\n                y: roi.y + movePrevPos[0] - pos[0],\n            })\n        } else {\n            let targets: number[][]\n            switch (cursorMode) {\n                case DISABLED:\n                    targets = []\n                    break\n                case FLOATING:\n                    targets = [pos]\n                    break\n                case FALLING:\n                    targets = selectTillBranch(edgeRoi, fallPos(edgeRoi, pos))\n                    break\n                case ADHERE:\n                    targets = [fallPos(edgeRoi, pos, true)].filter(p => getVal(edgeRoi, p))\n            }\n            if (actionMode === NO_ACTION || !(isMouseDown || pressed)) {\n                displayUpdate.next({ targets: targets, color: CursorColors[cursorMode] })\n            } else {\n                if (!targets.length) return\n                switch (actionMode) {\n                    case WIPE_EDGE:\n                        targets = targets.filter(p => getVal(edgeRoi, p) === 255)\n                        edgeUpdate.next({ isSet: false, targets: targets })\n                        break\n                    case DRAW_EDGE:\n                        edgeUpdate.next({ isSet: true, targets: targets })\n                        break\n                    case REPAIR_EDGE:\n                        const p = targets.pop()!\n                        const range = 20\n                        for (let i = p[0] - range; i < p[0] + range; i++)\n                            for (let j = p[1] - range; j < p[1] + range; j++)\n                                targets.push([i, j])\n                        targets = targets.filter(p => needRepair(edgeRoi, p))\n                        edgeUpdate.next({ isSet: true, targets: targets })\n                        break\n                    case FILL_LABEL:\n                        targets = fillSelect([edgeRoi, labelRoi], targets[0])\n                        labelUpdate.next({ isSet: true, targets: targets })\n                }\n                if (!targets.length) return\n            }\n        }\n    }, [roi, actionMode, cursorMode, isMouseDown, movePrevPos, isMovingCanvas])\n\n    const setModes = useCallback((newCursorMode: CursorMode, newActionMode: ActionMode) => {\n        if (cursorMode !== newCursorMode) {\n            while (ValidCursorModes[newActionMode].indexOf(newCursorMode) < 0)\n                newCursorMode = (newCursorMode + 1) % 4 as CursorMode\n            setCursorMode(newCursorMode)\n        }\n        if (actionMode !== newActionMode) {\n            setActionMode(newActionMode)\n            setCursorMode(ValidCursorModes[newActionMode][0] as CursorMode)\n            composeUpdate.next(ComposeConfigs[newActionMode])\n        }\n    }, [cursorMode, actionMode])\n\n    const onImageLoad = useCallback((e: SyntheticEvent<HTMLImageElement, Event>) => {\n        srcUpdate.next(e.currentTarget)\n    }, [])\n\n    const onCanvasMouseEnter = useCallback((e: MouseEvent<HTMLCanvasElement>) => {\n        if (!inited) return\n        if (!isFocused) displayUpdate.next({ dimBy: 64 })\n    }, [inited, isFocused])\n\n    const onCanvasMouseLeave = useCallback((e: MouseEvent<HTMLCanvasElement>) => {\n        if (!inited) return\n        setMouseDown(false)\n        setMovePrevPos([-1, -1])\n        if (!isFocused) displayUpdate.next({ dimBy: 96 })\n    }, [inited, isFocused])\n\n    const onCanvasMouseMove = useCallback((e: MouseEvent<HTMLCanvasElement>) => {\n        if (!inited) return\n        if (!isFocused) return\n        const pos = getRoiPos(roi, getRelPos(e.currentTarget, e))\n        if (pos.toString() === movePrevPos.toString()) return\n        doAction(pos)\n        setMovePrevPos(pos)\n    }, [inited, roi, isFocused, movePrevPos, doAction])\n\n    const onCanvasMouseDown = useCallback((e: MouseEvent<HTMLCanvasElement>) => {\n        if (!inited) return\n        setMovePrevPos([-1, -1])\n        if (!isFocused) return\n        setMouseDown(true)\n        if (actionMode === NO_ACTION) return\n        const pos = getRoiPos(roi, getRelPos(e.currentTarget, e))\n        doAction(pos, true)\n    }, [inited, roi, isFocused, actionMode, doAction])\n\n    const onCanvasMouseUp = useCallback((e: MouseEvent<HTMLCanvasElement>) => {\n        if (!inited) return\n        setMouseDown(false)\n    }, [inited])\n\n    const onCanvasKeyPress = useCallback((e: KeyboardEvent<HTMLCanvasElement>) => {\n        if (!inited || isMovingCanvas) return\n        setMovePrevPos([-1, -1])\n        let newCursorMode: CursorMode = cursorMode, newActionMode: ActionMode = actionMode\n        switch (e.key) {\n            case \"q\": break\n            case \"f\":\n                newCursorMode = (cursorMode + 1) % 4 as CursorMode\n                break\n            case \"z\":\n                undo()\n                break\n            case \"s\":\n                downloadLabel()\n                break\n            case \"w\":\n                newActionMode = WIPE_EDGE\n                break\n            case \"e\":\n                newActionMode = DRAW_EDGE\n                break\n            case \"r\":\n                newActionMode = REPAIR_EDGE\n                break\n            case \"d\":\n                newActionMode = FILL_LABEL\n                break\n            default:\n                newActionMode = NO_ACTION\n        }\n        setModes(newCursorMode, newActionMode)\n    }, [inited, isMovingCanvas, actionMode, cursorMode, setModes, downloadLabel])\n\n    const onCanvasKeyDown = useCallback((e: KeyboardEvent<HTMLCanvasElement>) => {\n        if (!inited) return\n        switch (e.key) {\n            case \"q\":\n                setMovingCanvas(true)\n                break\n        }\n    }, [inited])\n\n    const onCanvasKeyUp = useCallback((e: KeyboardEvent<HTMLCanvasElement>) => {\n        if (!inited) return\n        switch (e.key) {\n            case \"q\":\n                setMovingCanvas(false)\n                break\n        }\n    }, [inited])\n\n    const onCanvasFocus = useCallback(() => {\n        if (!inited) return\n        setFocused(true)\n        displayUpdate.next({})\n    }, [inited])\n\n    const onCanvasBlur = useCallback(() => {\n        if (!inited) return\n        setFocused(false)\n        setMouseDown(false)\n        setMovePrevPos([-1, -1])\n        displayUpdate.next({ dimBy: 96 })\n    }, [inited])\n\n    const onCanvasWheel = useCallback((e: WheelEvent<HTMLCanvasElement>) => {\n        if (!inited || !isMovingCanvas) return\n        e.preventDefault()\n        const relPos = getRelPos(e.currentTarget, e)\n        const oldPos = getRoiPos(roi, relPos)\n        const newRoi = {\n            ...roi,\n            width: e.deltaY > 0 ? Math.ceil(roi.width * 1.05) : Math.floor(roi.width * 0.95),\n            height: e.deltaY > 0 ? Math.ceil(roi.height * 1.05) : Math.floor(roi.height * 0.95),\n        }\n        if (newRoi.width < RoiRange.width[0] || newRoi.width > RoiRange.width[1] ||\n            newRoi.height < RoiRange.height[0] || newRoi.height > RoiRange.height[1])\n            return\n        const newPos = getRoiPos(newRoi, relPos)\n        roiUpdate.next({\n            ...newRoi,\n            x: roi.x + oldPos[1] - newPos[1],\n            y: roi.y + oldPos[0] - newPos[0],\n        })\n    }, [inited, roi, isMovingCanvas])\n\n    const actionRow = useMemo(() => (\n        <Row align={\"middle\"}>\n            <Col span={24} >\n                <span>Action: </span>\n                <Radio.Group value={actionMode} onChange={(e) => setModes(cursorMode, e.target.value)} disabled={!inited}>\n                    <Radio.Button value={NO_ACTION}>No Action</Radio.Button>\n                    <Radio.Button value={WIPE_EDGE}>Wipe Edge (W)</Radio.Button>\n                    <Radio.Button value={DRAW_EDGE}>Draw Edge (E)</Radio.Button>\n                    <Radio.Button value={REPAIR_EDGE}>Repair Edge (R)</Radio.Button>\n                    <Radio.Button value={FILL_LABEL}>Fill Label (D)</Radio.Button>\n                </Radio.Group>\n            </Col>\n        </Row>\n    ), [inited, actionMode, cursorMode, setModes])\n\n    const miscRow = useMemo(() => (\n        <Row align={\"middle\"}>\n            <Col span={4}>\n                <span>Move Canvas: </span>\n                <Switch\n                    checked={isMovingCanvas}\n                    unCheckedChildren={\"Q\"}\n                    checkedChildren={\"Q\"} />\n            </Col>\n            <Col span={10}>\n                <span>Cursor (F): </span>\n                <Radio.Group value={cursorMode} onChange={(e) => setModes(e.target.value, actionMode)} disabled={!inited}>\n                    <Radio.Button value={FALLING} disabled={ValidCursorModes[actionMode].indexOf(FALLING) < 0}>Fall to Edge</Radio.Button>\n                    <Radio.Button value={ADHERE} disabled={ValidCursorModes[actionMode].indexOf(ADHERE) < 0}>Adhere to Edge</Radio.Button>\n                    <Radio.Button value={FLOATING} disabled={ValidCursorModes[actionMode].indexOf(FLOATING) < 0}>Floating</Radio.Button>\n                </Radio.Group>\n            </Col>\n            <Col span={3}>\n                <Button className=\"button\" type=\"danger\" ghost onClick={undo} disabled={!inited}>Undo (Z)</Button>\n            </Col>\n            <Col span={3}>\n                <Button className=\"button\" type=\"primary\" ghost onClick={downloadLabel} disabled={!inited}>Save Label (S)</Button>\n            </Col>\n        </Row>\n    ), [inited, actionMode, cursorMode, downloadLabel, isMovingCanvas, setModes])\n\n    const appearanceRow = useMemo(() => (\n        <Row align={\"middle\"}>\n            <Col span={2} offset={4}><span>Appearance: </span></Col>\n            <Col span={3}>\n                <Switch\n                    disabled={!inited}\n                    checked={composeConfig.showBg}\n                    unCheckedChildren={\"Background\"}\n                    checkedChildren={\"Background\"}\n                    onClick={() => composeUpdate.next({ ...composeConfig, showBg: !composeConfig.showBg })}\n                />\n                <Slider\n                    disabled={!inited}\n                    min={0}\n                    max={1}\n                    step={0.1}\n                    value={composeConfig.bgWeight}\n                    onChange={(e) => composeUpdate.next({ ...composeConfig, bgWeight: e as number })}\n                />\n            </Col>\n            <Col span={3} offset={1}>\n                <Row >\n                    <Col span={12}>\n                        <Switch\n                            disabled={!inited}\n                            checked={composeConfig.showEdge}\n                            unCheckedChildren={\"Edge\"}\n                            checkedChildren={\"Edge\"}\n                            onClick={() => composeUpdate.next({ ...composeConfig, showEdge: !composeConfig.showEdge })}\n                        />\n                    </Col>\n                    <Col span={12}>\n                        <Switch\n                            disabled={!inited}\n                            checked={composeConfig.showEdgeValley && composeConfig.showEdge}\n                            unCheckedChildren={\"Valley\"}\n                            checkedChildren={\"Valley\"}\n                            onClick={() => composeUpdate.next({ ...composeConfig, showEdgeValley: !composeConfig.showEdgeValley })}\n                        />\n                    </Col>\n                </Row>\n                <Slider\n                    disabled={!inited}\n                    min={0}\n                    max={1}\n                    step={0.1}\n                    value={composeConfig.edgeWeight}\n                    onChange={(e) => composeUpdate.next({ ...composeConfig, edgeWeight: e as number })}\n                />\n            </Col>\n            <Col span={3} offset={1}>\n                <Switch\n                    disabled={!inited}\n                    checked={composeConfig.showLabel}\n                    unCheckedChildren={\"Label\"}\n                    checkedChildren={\"Label\"}\n                    onClick={() => composeUpdate.next({ ...composeConfig, showLabel: !composeConfig.showLabel })}\n                />\n                <Slider\n                    disabled={!inited}\n                    min={0}\n                    max={1}\n                    step={0.1}\n                    value={composeConfig.labelWeight}\n                    onChange={(e) => composeUpdate.next({ ...composeConfig, labelWeight: e as number })}\n                />\n            </Col>\n        </Row>\n    ), [inited, composeConfig])\n\n\n    return (\n        <div className=\"App\">\n            <div className=\"input\">\n                <img id=\"imageSrc\" alt={\"Canvas Input\"} ref={imageSrc} onLoad={onImageLoad} style={{ display: \"none\" }} />\n                <input type=\"file\" id=\"fileInput\" name=\"file\" onChange={(e) => {\n                    imageSrc.current!.src = URL.createObjectURL(e.target.files![0]);\n                }} />\n            </div>\n            {actionRow}\n            {miscRow}\n            {appearanceRow}\n            <div className=\"canvas\">\n                <canvas\n                    id=\"canvas\"\n                    className={isMovingCanvas ? \"moving\" : \"\"}\n                    onMouseEnter={onCanvasMouseEnter}\n                    onMouseLeave={onCanvasMouseLeave}\n                    onMouseMove={onCanvasMouseMove}\n                    onMouseDown={onCanvasMouseDown}\n                    onMouseUp={onCanvasMouseUp}\n                    onKeyPress={onCanvasKeyPress}\n                    onFocus={onCanvasFocus}\n                    onBlur={onCanvasBlur}\n                    onWheel={onCanvasWheel}\n                    onKeyDown={onCanvasKeyDown}\n                    onKeyUp={onCanvasKeyUp}\n                    tabIndex={1000}\n                />\n            </div>\n            <canvas id=\"output\" ref={labelOutput} />\n        </div>\n    );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}